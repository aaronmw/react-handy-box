"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Z_INDEXES = exports.TRANSITION_DURATIONS = exports.TEXT_DECORATIONS = exports.RESPONSIVE_BREAKPOINTS = exports.GRID_SIZES = exports.LINE_HEIGHTS = exports.FONT_SIZES = exports.COLOR_PALETTE = exports.TINTS_AND_SHADES = exports.CORE_COLORS = exports.UNADJUSTABLE_COLORS = exports.SPOT_COLORS = exports.BOX_SHADOW_STYLES = exports.BORDER_STYLES = exports.BORDER_RADII = void 0;

var _polished = require("polished");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const BORDER_RADII = {
  normal: '4px',
  large: '12px',
  circle: '1000px'
};
exports.BORDER_RADII = BORDER_RADII;
const BORDER_STYLES = {
  normal: '1px solid',
  thick: '2px solid',
  dashed: '2px dashed'
};
exports.BORDER_STYLES = BORDER_STYLES;
const BOX_SHADOW_STYLES = {
  normal: '0 4px 5px rgba(0, 0, 0, 0.5)',
  large: '0 8px 10px rgba(0, 0, 0, 0.5)'
};
exports.BOX_SHADOW_STYLES = BOX_SHADOW_STYLES;
const SPOT_COLORS = {
  border: 'gray',
  danger: 'red--500',
  text: 'gray--700'
};
exports.SPOT_COLORS = SPOT_COLORS;
const UNADJUSTABLE_COLORS = {
  white: '#fff',
  transparent: 'rgba(255, 255, 255, 0)'
};
exports.UNADJUSTABLE_COLORS = UNADJUSTABLE_COLORS;

const buildTintsAndShades = (coreColors, tintsAndShades) => {
  const expandedColors = _objectSpread({}, coreColors);

  const tintAndShadeNames = Object.keys(tintsAndShades);
  Object.keys(coreColors).forEach(colorName => {
    const colorCode = coreColors[colorName];
    tintAndShadeNames.forEach(tintOrShadeName => {
      const tintOrShader = tintsAndShades[tintOrShadeName];
      expandedColors["".concat(colorName, "--").concat(tintOrShadeName)] = tintOrShader(colorCode);
    });
  });
  return expandedColors;
};

const CORE_COLORS = {
  red: '#db3838',
  orange: '#f6621f',
  yellow: '#fecc2f',
  green: '#b2c225',
  blue: '#41a4d8',
  indigo: '#ba34dc',
  violet: '#a363d9',
  gray: '#999'
};
exports.CORE_COLORS = CORE_COLORS;
const TINTS_AND_SHADES = {
  '100': colorCode => (0, _polished.lighten)(0.3, colorCode),
  '200': colorCode => (0, _polished.lighten)(0.2, colorCode),
  '300': colorCode => (0, _polished.lighten)(0.1, colorCode),
  '400': colorCode => colorCode,
  '500': colorCode => (0, _polished.darken)(0.1, colorCode),
  '600': colorCode => (0, _polished.darken)(0.2, colorCode),
  '700': colorCode => (0, _polished.darken)(0.3, colorCode)
};
exports.TINTS_AND_SHADES = TINTS_AND_SHADES;
const COLOR_PALETTE = buildTintsAndShades(CORE_COLORS, TINTS_AND_SHADES);
exports.COLOR_PALETTE = COLOR_PALETTE;
const FONT_SIZES = {
  small: '13px',
  normal: '14px',
  large: '18px',
  xlarge: '24px',
  xxlarge: '40px'
};
exports.FONT_SIZES = FONT_SIZES;
const LINE_HEIGHTS = {
  small: '18px',
  normal: '20px',
  large: '24px',
  xlarge: '32px',
  xxlarge: '40px'
};
exports.LINE_HEIGHTS = LINE_HEIGHTS;
const GRID_UNIT_BASE = '16px';
const GRID_SIZES = {
  xtight: "calc(".concat(GRID_UNIT_BASE, " * 0.25)"),
  tight: "calc(".concat(GRID_UNIT_BASE, " * 0.5)"),
  normal: GRID_UNIT_BASE,
  loose: "calc(".concat(GRID_UNIT_BASE, " * 1.5)"),
  xloose: "calc(".concat(GRID_UNIT_BASE, " * 2)")
};
exports.GRID_SIZES = GRID_SIZES;
const RESPONSIVE_BREAKPOINTS = {
  phonesOnly: '@media (max-width: 599px)',
  tabletsPortraitAndUp: '@media (min-width: 600px)',
  tabletsLandscapeAndUp: '@media (min-width: 900px)',
  desktopsAndUp: '@media (min-width: 1200px)',
  largeDesktopsAndUp: '@media (min-width: 1800px)'
};
exports.RESPONSIVE_BREAKPOINTS = RESPONSIVE_BREAKPOINTS;
const TEXT_DECORATIONS = {
  'underline': 'underline',
  'dotted-underline': 'underline dotted',
  'wavy-underline': 'underline wavy'
};
exports.TEXT_DECORATIONS = TEXT_DECORATIONS;
const TRANSITION_DURATIONS = {
  short: '0.2s',
  normal: '0.5s',
  long: '1s'
};
exports.TRANSITION_DURATIONS = TRANSITION_DURATIONS;
const Z_INDEXES = {
  '1--stickyElements': 1000,
  '2--modalWindows': 5000,
  '3--popoversAndTooltips': 6000,
  '4--maximum': 1000000
};
exports.Z_INDEXES = Z_INDEXES;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,